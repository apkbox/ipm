//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.PortfolioSummarySampleData
{
	using System; 
	using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class PortfolioSummarySampleData { }
#else

	public class PortfolioSummarySampleData : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		public PortfolioSummarySampleData()
		{
			try
			{
				Uri resourceUri = new Uri("/IpmUI;component/SampleData/PortfolioSummarySampleData/PortfolioSummarySampleData.xaml", UriKind.RelativeOrAbsolute);
				System.Windows.Application.LoadComponent(this, resourceUri);
			}
			catch
			{
			}
		}

		private Accounts _Accounts = new Accounts();

		public Accounts Accounts
		{
			get
			{
				return this._Accounts;
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
	}

	public class AccountsItem : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private string _Description = string.Empty;

		public string Description
		{
			get
			{
				return this._Description;
			}

			set
			{
				if (this._Description != value)
				{
					this._Description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}

		private string _Currency = string.Empty;

		public string Currency
		{
			get
			{
				return this._Currency;
			}

			set
			{
				if (this._Currency != value)
				{
					this._Currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}

		private string _BookValue = string.Empty;

		public string BookValue
		{
			get
			{
				return this._BookValue;
			}

			set
			{
				if (this._BookValue != value)
				{
					this._BookValue = value;
					this.OnPropertyChanged("BookValue");
				}
			}
		}

		private string _MarketValue = string.Empty;

		public string MarketValue
		{
			get
			{
				return this._MarketValue;
			}

			set
			{
				if (this._MarketValue != value)
				{
					this._MarketValue = value;
					this.OnPropertyChanged("MarketValue");
				}
			}
		}

		private string _MarketValueTimestamp = string.Empty;

		public string MarketValueTimestamp
		{
			get
			{
				return this._MarketValueTimestamp;
			}

			set
			{
				if (this._MarketValueTimestamp != value)
				{
					this._MarketValueTimestamp = value;
					this.OnPropertyChanged("MarketValueTimestamp");
				}
			}
		}

		private string _Cash = string.Empty;

		public string Cash
		{
			get
			{
				return this._Cash;
			}

			set
			{
				if (this._Cash != value)
				{
					this._Cash = value;
					this.OnPropertyChanged("Cash");
				}
			}
		}

		private string _Yield = string.Empty;

		public string Yield
		{
			get
			{
				return this._Yield;
			}

			set
			{
				if (this._Yield != value)
				{
					this._Yield = value;
					this.OnPropertyChanged("Yield");
				}
			}
		}

		private string _ReturnPercent = string.Empty;

		public string ReturnPercent
		{
			get
			{
				return this._ReturnPercent;
			}

			set
			{
				if (this._ReturnPercent != value)
				{
					this._ReturnPercent = value;
					this.OnPropertyChanged("ReturnPercent");
				}
			}
		}

		private string _ReturnAmount = string.Empty;

		public string ReturnAmount
		{
			get
			{
				return this._ReturnAmount;
			}

			set
			{
				if (this._ReturnAmount != value)
				{
					this._ReturnAmount = value;
					this.OnPropertyChanged("ReturnAmount");
				}
			}
		}
	}

	public class Accounts : System.Collections.ObjectModel.ObservableCollection<AccountsItem>
	{ 
	}
#endif
}
